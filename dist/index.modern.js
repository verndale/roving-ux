const e=new Map,t=({element:t,target:d,callback:o})=>{const i=t.querySelectorAll(d||":scope *"),v=i[0];t.tabIndex=-1,i.forEach(e=>e.tabIndex=-1),v.tabIndex=0,e.set(t,{targets:i,active:v,index:0});const l=n=>{e.get("last_rover")!=t&&(c(t,e.get(t).active),e.set("last_rover",t))};t.addEventListener("focusin",l);const x=e=>{switch(e.keyCode){case 39:case 40:e.preventDefault(),s(t,o);break;case 37:case 38:e.preventDefault(),r(t,o);break;case 36:e.preventDefault(),n(t,o);break;case 35:e.preventDefault(),a(t,o)}};t.addEventListener("keydown",x);const g=n=>{t.removeEventListener("focusin",l),t.removeEventListener("keydown",x),t.removeEventListener("DOMNodeRemoved",g),e.delete(t),i.forEach(e=>e.tabIndex="")};t.addEventListener("DOMNodeRemovedFromDocument",g)},n=(t,n)=>{const a=e.get(t);a.index=0;let s=a.targets[a.index];s&&c(t,s,n)},a=(t,n)=>{const a=e.get(t);a.index=a.targets.length-1;let s=a.targets[a.index];s&&c(t,s,n)},s=(t,n)=>{const a=e.get(t);a.index+=1,a.index>a.targets.length-1&&(a.index=a.targets.length-1);let s=a.targets[a.index];s&&c(t,s,n)},r=(t,n)=>{const a=e.get(t);a.index-=1,a.index<1&&(a.index=0);let s=a.targets[a.index];s&&c(t,s,n)},c=(t,n,a)=>{const s=e.get(t);s.active.tabIndex=-1,a&&a(n),s.active=n,s.active.tabIndex=0,s.active.focus()};export{t as rovingIndex};
//# sourceMappingURL=index.modern.js.map
